openapi: 3.0.3
info:
  title: Frontend API schema (client contract)
  version: 1.0.0
paths:
  /api/listings/popular/:
    get:
      description: Get top listings by view_count
      parameters:
        - in: query
          name: limit
          schema:
            type: integer
          required: false
          description: Max items (default 20, max 100)
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ListingShort'
  /api/listings/by-url/:
    post:
      description: Get or create listing by URL
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListingByUrlRequest'
      responses:
        '200':
          description: Existing listing returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListingDetail'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListingDetail'
        '400':
          description: Invalid URL
        '422':
          description: Unable to fetch or parse listing
  /api/listings/{pk}/:
    get:
      description: Retrieve listing by ID and increment view count
      parameters:
        - in: path
          name: pk
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListingDetail'
        '404':
          description: Not found
components:
  schemas:
    ListingShort:
      type: object
      properties:
        id: { type: integer }
        title: { type: string }
        image_url: { type: string, format: uri, nullable: true }
        price: { type: string, nullable: true, description: Decimal as string }
        view_count: { type: integer }
      required: [id, title, view_count]
    ListingDetail:
      type: object
      properties:
        id: { type: integer }
        avito_url: { type: string, format: uri }
        title: { type: string }
        image_url: { type: string, format: uri, nullable: true }
        price: { type: string, nullable: true, description: Decimal as string }
        description: { type: string }
        view_count: { type: integer }
        created_at: { type: string, format: date-time }
        updated_at: { type: string, format: date-time }
      required: [id, avito_url, title, description, view_count, created_at, updated_at]
    ListingByUrlRequest:
      type: object
      properties:
        url: { type: string, format: uri }
      required: [url]
