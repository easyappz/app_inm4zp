openapi: 3.0.3
info:
  title: Easyapp API
  version: 1.0.0
  description: API documentation for easyapp
paths:
  /api/hello/:
    get:
      operationId: api_hello_retrieve
      description: Get a hello world message
      tags:
      - api
      security: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
          description: ''
  /api/auth/register/:
    post:
      operationId: api_auth_register_create
      description: Register a new user and receive a JWT token.
      tags:
      - auth
      security: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterRequest'
      responses:
        '201':
          description: User registered
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResponse'
        '400':
          description: Validation error
  /api/auth/login/:
    post:
      operationId: api_auth_login_create
      description: Login and receive a JWT token.
      tags:
      - auth
      security: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
      responses:
        '200':
          description: Login successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResponse'
        '400':
          description: Invalid credentials
  /api/auth/me/:
    get:
      operationId: api_auth_me_retrieve
      description: Get current authenticated user.
      tags:
      - auth
      security:
      - bearerAuth: []
      responses:
        '200':
          description: Current user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '401':
          description: Unauthorized
  /api/listings/popular/:
    get:
      operationId: api_listings_popular_list
      description: Get top listings by view_count.
      tags:
      - listings
      security: []
      parameters:
      - in: query
        name: limit
        schema:
          type: integer
        required: false
        description: Max items to return (default 20, max 100)
      responses:
        '200':
          description: Popular listings
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ListingShort'
  /api/listings/by-url/:
    post:
      operationId: api_listings_by_url_create
      description: If listing with given URL exists, return it. Otherwise fetch data from URL, create a new listing and return it.
      tags:
      - listings
      security: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListingByUrlRequest'
      responses:
        '200':
          description: Existing listing returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListingDetail'
        '201':
          description: Listing created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListingDetail'
        '400':
          description: Invalid URL
        '422':
          description: Unable to fetch or parse listing
  /api/listings/{pk}/:
    get:
      operationId: api_listing_detail_retrieve
      description: Retrieve listing by ID and increment view count.
      tags:
      - listings
      security: []
      parameters:
      - in: path
        name: pk
        required: true
        schema:
          type: integer
        description: Listing ID
      responses:
        '200':
          description: Listing detail
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListingDetail'
        '404':
          description: Not found
components:
  schemas:
    Message:
      type: object
      properties:
        message:
          type: string
          maxLength: 200
        timestamp:
          type: string
          format: date-time
          readOnly: true
      required:
      - message
      - timestamp
    RegisterRequest:
      type: object
      properties:
        username:
          type: string
          minLength: 3
          maxLength: 150
        password:
          type: string
          minLength: 6
          maxLength: 128
      required: [username, password]
    LoginRequest:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
      required: [username, password]
    User:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        username:
          type: string
        date_joined:
          type: string
          format: date-time
      required: [id, username, date_joined]
    AuthResponse:
      type: object
      properties:
        user:
          $ref: '#/components/schemas/User'
        token:
          type: string
      required: [user, token]
    ListingShort:
      type: object
      properties:
        id:
          type: integer
        title:
          type: string
        image_url:
          type: string
          nullable: true
          format: uri
        price:
          type: string
          nullable: true
          description: Decimal as string
        view_count:
          type: integer
      required: [id, title, view_count]
    ListingDetail:
      type: object
      properties:
        id:
          type: integer
        avito_url:
          type: string
          format: uri
        title:
          type: string
        image_url:
          type: string
          nullable: true
          format: uri
        price:
          type: string
          nullable: true
          description: Decimal as string
        description:
          type: string
        view_count:
          type: integer
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
      required: [id, avito_url, title, description, view_count, created_at, updated_at]
    ListingByUrlRequest:
      type: object
      properties:
        url:
          type: string
          format: uri
      required: [url]
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
